# https://leetcode.com/problems/remove-nth-node-from-end-of-list/

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        nd_cnt = 0
        tmp_head = head
        while tmp_head:
            nd_cnt+=1
            tmp_head = tmp_head.next
        tmp_head = head
        t = nd_cnt - n
        if nd_cnt > 1 and nd_cnt != n:
            for x in range(t-1):
                tmp_head = tmp_head.next
            tmp_head.next = tmp_head.next.next
        else:
            head = head.next
        return head
